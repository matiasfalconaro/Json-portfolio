---
export const props = {}
---

<label class="switch" aria-label="Toggle Theme">
  <input type="checkbox" id="theme-checkbox">
  <span class="slider round"></span>
</label>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const checkbox = document.getElementById('theme-checkbox') as HTMLInputElement | null;
    const currentTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.setAttribute('data-theme', currentTheme);

    if (checkbox) {
      if (currentTheme === 'dark') {
        checkbox.checked = true;
      }

      checkbox.addEventListener('change', () => {
        const newTheme = checkbox.checked ? 'dark' : 'light';
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
      });
    }
  });
</script>

<style>
  .switch {
    position: absolute;
    top: 1rem;
    right: 1rem;
    display: inline-block;
    width: 60px;
    height: 34px;
  }

  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--background-color);
    border: 2px solid var(--border-color);
    -webkit-transition: .4s;
    transition: .4s;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 2px;
    right: 2px;
    bottom: 2px;
    top: 2px;
    background-color: #000000;
    -webkit-transition: .4s;
    transition: .4s;
  }

  input:checked + .slider {
    background-color: #000000;
  }

  input:checked + .slider:before {
    background-color: #FFFFFF;
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
  }

  .slider.round {
    border-radius: 34px;
  }

  .slider.round:before {
    border-radius: 50%;
  }
</style>
